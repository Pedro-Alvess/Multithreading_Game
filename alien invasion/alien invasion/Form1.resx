<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkUso
        RFEcxn8GEYOFWUgWdzGUooRkqSFSlGZGjcfCvXfMUHPvTPeObCyVrbLw2HgtbKzZWtgqpTxKtjZWxEa6
        /ueOmkmNcup0fn3nfF/nfAcCBxnTcqt6wLLzTnQsoiVmZrWaZ6ppo5F6OnXTzU3GRuOUHR+3VKj1pltl
        8b/RkFx0TajQhIfMnJMXXhAeWM3nFO8Ih8wlPSl8KtzlyAWF75VuFPhFcdrngMoMOfHosHBIWEuXsFHC
        5pJjCfcLh5OWLfmBRIGTitcUW5kV8+ee6oXBRXs6pnSZbYwxziRTaBissEyGPN2y2qK4RGU/Usbf6vun
        xGWIaxlTHCNksdB9P+oPfnfrpvp6C0nBCFQ/ed5bO9Rswdem530eet7XEVQ+woVd9GcPYPBd9M2iFt6H
        pnU4uyxqxjacb0DLQ053dF+qlBlIpeD1RL5pBpqvoW6u0NvPPsd3EJeuJq5gdw860pI9X+bdtaW9/XnG
        74/IN4k6crCygK5HAAAACXBIWXMAAA9eAAAPXgEFzTgtAAAAB3RJTUUH5wUcDigYURX9OwAAAtdJREFU
        eF7tlFlu40AQQ32ZYA4y181Zcov5mRPMn0cUigJVpqzFWtpwEXiI1K6F7Di5lUqlUqlUKpVW6Ofr1z0e
        n+r+53YH8bpIf39/3QGel+45XTBGc/qcpWGWiPW4NPxs7gIYVkPr86tieL2AvWbvIhpSU3uaxBx+Czh3
        r9kvSw2BbDTKXpLOd0TZNVIjCJ6/qlG2WOwHcTT6BijcG2UPQo36ieN9pSa2LuQMwH6g55iXwXmMsELN
        Fj+rRIN8zuY0EMAZxDrWEq3lmdYSrQMx9kGsj9d9pcbzO8+cUQ0Ccl8m1wM393SpSX3vPww5o/iJENq/
        FPbqTJ71C8+UMwji417ZKM74W9SeXEe0hjRxAS4EiZKRWK9oTw5EtIa4WUqsPE5YQoNcmA2yDj8h9mgd
        4aw5cg9mOmLlccISNYAzNcczfq5oHRlC/vt+hJ915D43X4GHw+SW0Bie1YiiAchbXsCcnCFA8xrMBle0
        tuPtLoCGlVEoF1rR2g43D+hOEFauEU2owRykxwWeIvXqbKDhQVixf667SxdnYyQH6HFBp0i9bgcIS4Mu
        v4BsvMcFXEqalfeFpUHtXYALtRaZl/eFpeuUzel7jwu0FpnH4HoWVq6RGqkL+MQLoCFnbMCFWkqalfeF
        jeuUDZGRcRdsKRPBif7H5z/meN1fbgHPgBobXQBxAadIvTob6N6w0tYFKKMwLqyitR1uHtC9YeV4uYVq
        xBkFo1AutKK1HW4e0L1h5RqpkYwzPoSbCZ/73HwQNq6TMwVcCKAhn5F73A4QNtoRjWXTOZBDa4ibFava
        lBpVNFQOTrSGoDfXxaq2xeAwnC9gCdqr4UGsaFu8gIwLq7ieuQtgXbyeqylTlAYBGlZDbb0A/RzPcXye
        nCmVBgFbLgDEuAfxc8x4VneYGCBeV4m9W/upuUu6TM0aO0N7/XbfVh9/AdBH/wmUSqVSqVQqlUqlUtu6
        3f4DySo7HmDm7acAAAAASUVORK5CYII=
</value>
  </data>
</root>